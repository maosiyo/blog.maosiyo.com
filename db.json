{"meta":{"version":1,"warehouse":"3.0.2"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"themes/icarus/source/css/cyberpunk.styl","path":"css/cyberpunk.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/favicon.svg","path":"img/favicon.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/avatar.png","path":"img/avatar.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/css/default.styl","path":"css/default.styl","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/logo.svg","path":"img/logo.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/og_image.png","path":"img/og_image.png","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","path":"img/razor-bottom-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/razor-top-black.svg","path":"img/razor-top-black.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/img/thumbnail.svg","path":"img/thumbnail.svg","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/back_to_top.js","path":"js/back_to_top.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/animation.js","path":"js/animation.js","modified":0,"renderable":1},{"_id":"themes/icarus/source/js/main.js","path":"js/main.js","modified":0,"renderable":1}],"Cache":[{"_id":"source/CNAME","hash":"7ea99d63fa30a4e29266b984ffc76fbff7df8143","modified":1598543298286},{"_id":"themes/icarus/.eslintignore","hash":"5410a1bef9807f666cd92a0d2020f700e67e4096","modified":1598544597009},{"_id":"themes/icarus/.eslintrc.json","hash":"b6de6612836a7814bae9a51a5089609853cc44a2","modified":1598544597010},{"_id":"themes/icarus/.gitignore","hash":"8ecd21ae1f2cdc3cf59b71a526564252c93b84df","modified":1598544597014},{"_id":"themes/icarus/.travis.yml","hash":"d7c64bd876f0af1288d855a6d61d691d27770560","modified":1598544597014},{"_id":"themes/icarus/CONTRIBUTING.md","hash":"c5086f94020aa58e2a7d131806e0cf15e7b54854","modified":1598544597015},{"_id":"themes/icarus/LICENSE","hash":"bb9d587dd8b9073462ae10daf252ea3092a81b1b","modified":1598544597015},{"_id":"themes/icarus/README.md","hash":"6ae64e63c2f6f9657a8932001a07f89fc7e87ea7","modified":1598544597016},{"_id":"themes/icarus/_config.yml","hash":"d179c3c34c9bae437567fdae9c4eff56d1defd21","modified":1598544749542},{"_id":"themes/icarus/package.json","hash":"0c080db164fc941a0b707c369f30d699cc42c496","modified":1598544597056},{"_id":"source/_posts/MobaXterm 远程连接虚拟机很慢.md","hash":"77a02e806e6c21bb099bf0595f1f3e1aa1f45f01","modified":1567496651566},{"_id":"source/_posts/RabbitMQ-学习笔记-5种消息模式相关概念.md","hash":"d25d72712ec1bbfa8346eff6e1a0d236ec0edf78","modified":1598539375487},{"_id":"source/_posts/Windows 10 家庭版升级企业版.md","hash":"4aff24b8fb4dc225ac83a9ca51cb0dcd9f970e28","modified":1567496661046},{"_id":"source/_posts/Spring拓展点：BeanFactoryPostProcessor接口及其子接口.md","hash":"5e8ce105bf6ccf6a44adb07e467fbf38ed5aad97","modified":1598539417168},{"_id":"source/_posts/spring-boot-学习笔记（一）.md","hash":"f6dc916af0eb1d1ccf93714309e7291d89130544","modified":1598539383383},{"_id":"source/_posts/使用 bat 脚本启动关闭 spring boot 项目.md","hash":"59fb4803d8e3a64f5b63c56f55fbe53c6c974561","modified":1567496665303},{"_id":"source/_posts/使用 shell 脚本启动关闭 spring boot 项目.md","hash":"ac1d95f856160a6e252e3b0024f11c43b7e30ece","modified":1593844284648},{"_id":"themes/icarus/.github/stale.yml","hash":"9226510d97f26705ec215446610a9980a4760abc","modified":1598544597014},{"_id":"themes/icarus/include/config.js","hash":"bd4b10b7ad360ac09912646c04efc021ff3d45ad","modified":1598544597016},{"_id":"themes/icarus/include/dependency.js","hash":"121cb3c4946c1d0eab632b8e104bb8757539b33b","modified":1598544597018},{"_id":"themes/icarus/include/register.js","hash":"34f5a2a774ccbf50e18cb93cc7e2b8ea9c0b3a83","modified":1598544597019},{"_id":"themes/icarus/languages/de.yml","hash":"ef43979c403b3a221585d5dd0b7205627437818e","modified":1598544597037},{"_id":"themes/icarus/languages/en.yml","hash":"9d14e90a3f3dde00b982fa56becd8e63925ff6cd","modified":1598544597037},{"_id":"themes/icarus/languages/fr.yml","hash":"b85a2d4fcc790a8b84326235850eb54532f6b75e","modified":1598544597039},{"_id":"themes/icarus/languages/es.yml","hash":"f0ea2c482a8bc5ed43452ecc7ebe601504e0cc54","modified":1598544597038},{"_id":"themes/icarus/languages/id.yml","hash":"ee655e6a045eb28ea480a348bbefd10ef115494b","modified":1598544597039},{"_id":"themes/icarus/languages/ja.yml","hash":"3c921f24b19a797b2ae23cf621a35bb9b043ddf9","modified":1598544597040},{"_id":"themes/icarus/languages/ko.yml","hash":"2d12f3975b576afb025df773e30521b58abd015e","modified":1598544597040},{"_id":"themes/icarus/languages/pt-BR.yml","hash":"28ae713d8d26ab875104684e604592f4c495b638","modified":1598544597041},{"_id":"themes/icarus/languages/pl.yml","hash":"a6dbd568cb18104685b20ab7b5767f455628f61c","modified":1598544597040},{"_id":"themes/icarus/languages/ru.yml","hash":"62451109780acfe2db8630248005697c10a68a61","modified":1598544597041},{"_id":"themes/icarus/languages/tr.yml","hash":"2e334f0f98756256754f48d8dff3baa045700283","modified":1598544597041},{"_id":"themes/icarus/languages/vn.yml","hash":"cd2d57a3fe6389bdd76f193c6c662d242960ed02","modified":1598544597042},{"_id":"themes/icarus/languages/zh-CN.yml","hash":"915b3868a8fa5af2d4a81bebaec1fce9c160c530","modified":1598544597042},{"_id":"themes/icarus/languages/zh-TW.yml","hash":"eaede43f04878974f43eff4d41cb28bf4c2908fe","modified":1598544597043},{"_id":"themes/icarus/layout/archive.jsx","hash":"eef212d92edd1f10d3f0756cd153771ea925dbbc","modified":1598544597043},{"_id":"themes/icarus/layout/categories.jsx","hash":"50d81072a5b5508a906b2c96289982d081a59edd","modified":1598544597043},{"_id":"themes/icarus/layout/category.jsx","hash":"16c8cf03fd976d839242dcf9240ccaf59b843daa","modified":1598544597043},{"_id":"themes/icarus/layout/index.jsx","hash":"c2e7008020c4358f491c8e2ad871aa2274a427d0","modified":1598544597050},{"_id":"themes/icarus/layout/layout.jsx","hash":"4103d29daf78d4d36aef428ad57ed82f5f108d1a","modified":1598544597050},{"_id":"themes/icarus/layout/page.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1598544597051},{"_id":"themes/icarus/layout/post.jsx","hash":"8a3cce132f7a4d52450cdcada54afeb5465fdc8d","modified":1598544597053},{"_id":"themes/icarus/layout/tag.jsx","hash":"49c04b040ba0ff138ad36d6478bd76e18edc8085","modified":1598544597054},{"_id":"themes/icarus/layout/tags.jsx","hash":"5bd27a87fc6e456beb3e56e1dcdbd1f7ac010ce1","modified":1598544597054},{"_id":"themes/icarus/scripts/index.js","hash":"6156ee1e29064e851aeef66305302103a379cae3","modified":1598544597056},{"_id":"themes/icarus/layout/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597044},{"_id":"themes/icarus/layout/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597049},{"_id":"themes/icarus/layout/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597051},{"_id":"themes/icarus/layout/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597053},{"_id":"themes/icarus/layout/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597053},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/Bug反馈.md","hash":"53a4b20cf1f30c6d334918b646db6842c77e95ef","modified":1598544597011},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/bug_report.md","hash":"63d02fa86bdd6ff0c6d6a3717fc33187d6555dc5","modified":1598544597012},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/feature_request.md","hash":"4c5fea047359feddc80f62d24b3cab284a8440fc","modified":1598544597012},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/功能建议.md","hash":"144eb57d0e0d9121eb872195af5a42c8a6bbe9eb","modified":1598544597013},{"_id":"themes/icarus/.github/ISSUE_TEMPLATE/config.yml","hash":"3c91c27d3bde6d15e9c78c454c91ae414fe69d30","modified":1598544597012},{"_id":"themes/icarus/.github/PULL_REQUEST_TEMPLATE/pull_request_template.md","hash":"490a3717d4d18ddccb90f1fd14acf8b2fbb300dc","modified":1598544597014},{"_id":"themes/icarus/include/migration/head.js","hash":"c32df32ae70cd5e522de5481cde4e7c416b4dbec","modified":1598544597018},{"_id":"themes/icarus/include/migration/v2_v3.js","hash":"9426e6bc533d7c7ce6469f0e9af3116d16f8ebe5","modified":1598544597018},{"_id":"themes/icarus/include/schema/config.json","hash":"0b4810adae5ad713c535a5abe126bfb044c861e7","modified":1598544597026},{"_id":"themes/icarus/include/style/article.styl","hash":"5990348fe849fb8bb6801731be46fe0ad0c93c58","modified":1598544597032},{"_id":"themes/icarus/include/style/base.styl","hash":"49258450efd3f703c7a8855f70e2890386e7ae5b","modified":1598544597032},{"_id":"themes/icarus/include/style/button.styl","hash":"f9e52370ee7801b35682d76071f98f7ce6126231","modified":1598544597032},{"_id":"themes/icarus/include/style/card.styl","hash":"6feb59420aa2fd67e52dd5b917623dc2fcb75bda","modified":1598544597033},{"_id":"themes/icarus/include/style/codeblock.styl","hash":"62e452b7d7aa5ac6233798a690026b526cb245a7","modified":1598544597033},{"_id":"themes/icarus/include/style/donate.styl","hash":"41495808091511b475d35e3b3491e2d345584601","modified":1598544597034},{"_id":"themes/icarus/include/style/footer.styl","hash":"d90d5137f29841ca4dc48c62e344bebe0cd7aa76","modified":1598544597034},{"_id":"themes/icarus/include/style/helper.styl","hash":"113719489effa9529756c7763725dfe4f8591b8d","modified":1598544597034},{"_id":"themes/icarus/include/style/navbar.styl","hash":"ae0e3a559e4aed6bb33ccb81765677ac30d535da","modified":1598544597035},{"_id":"themes/icarus/include/style/pagination.styl","hash":"7e1aba7d4442b5ba39b82569341c4e939a8005cc","modified":1598544597035},{"_id":"themes/icarus/include/style/plugin.styl","hash":"f23c80665bcef81640eeb635f265418fa0f66ace","modified":1598544597035},{"_id":"themes/icarus/include/style/responsive.styl","hash":"9a481311478b788851d437b82a934fcfce758f9f","modified":1598544597036},{"_id":"themes/icarus/include/style/search.styl","hash":"ff947d107b57b5d8865680be1301f6c49abcc3e1","modified":1598544597036},{"_id":"themes/icarus/include/util/console.js","hash":"9bd6d4691b56012ea17146db577e27ae20e0c335","modified":1598544597037},{"_id":"themes/icarus/include/style/timeline.styl","hash":"0f15f648821abe412e2105e157c9810bb4834aa4","modified":1598544597036},{"_id":"themes/icarus/layout/common/article.jsx","hash":"139d104572ad54b9e737cf3f76d9c9a7b31e22d8","modified":1598544597044},{"_id":"themes/icarus/layout/common/comment.jsx","hash":"0ab94bbc55bda6f3f284cbd208efa4ed8205481c","modified":1598544597044},{"_id":"themes/icarus/layout/common/donates.jsx","hash":"c026449e4bc757fbd9edb5b870d56f7b7a349497","modified":1598544597046},{"_id":"themes/icarus/layout/common/footer.jsx","hash":"583a29899f56f278caf3afbe019a17e1ec7fc027","modified":1598544597046},{"_id":"themes/icarus/layout/common/navbar.jsx","hash":"59786a8510709ff43f2af0e01ff9715cdebc26fd","modified":1598544597047},{"_id":"themes/icarus/layout/common/head.jsx","hash":"02a8772175167f67f5ef779e84dd57335ca9a965","modified":1598544597046},{"_id":"themes/icarus/layout/common/plugins.jsx","hash":"fedab3e147ae1ed2d730a559c29e72b2315db5c1","modified":1598544597047},{"_id":"themes/icarus/layout/common/scripts.jsx","hash":"a40608473a1674de2ed05c5dc5627ab1d7a12744","modified":1598544597048},{"_id":"themes/icarus/layout/common/search.jsx","hash":"82a0cf309dbe5257f30c95621dd4e6521b912cbc","modified":1598544597048},{"_id":"themes/icarus/layout/common/share.jsx","hash":"ed9aba6def6515df79b77e231f8620b0e209e30c","modified":1598544597048},{"_id":"themes/icarus/layout/common/widgets.jsx","hash":"ec282a8d470b29cce2415c0a9bddcfb41cedafcf","modified":1598544597049},{"_id":"themes/icarus/layout/plugin/animejs.jsx","hash":"bd2b9209051a03e5cb3bdf2c97e6c16d0d75cb8a","modified":1598544597052},{"_id":"themes/icarus/layout/plugin/back_to_top.jsx","hash":"efff826b01ac0f8fc2619b6c43660ef8d6de6c3f","modified":1598544597052},{"_id":"themes/icarus/layout/widget/profile.jsx","hash":"56c9c87f5b660f54d1b602b95281effe8878c4cb","modified":1598544597055},{"_id":"themes/icarus/source/css/cyberpunk.styl","hash":"13b12c6024a67561a3678d1480113dfdf48f0269","modified":1598544597058},{"_id":"themes/icarus/source/css/style.styl","hash":"4c1e1734d85fa68b3ebcb5347c32f79e443ddcba","modified":1598544597059},{"_id":"themes/icarus/source/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1598544597059},{"_id":"themes/icarus/source/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1598544597059},{"_id":"themes/icarus/source/css/default.styl","hash":"b2d886eacd43ab395ae3221e92bc0a9d23eff3a0","modified":1598544597058},{"_id":"themes/icarus/source/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1598544597060},{"_id":"themes/icarus/source/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1598544597061},{"_id":"themes/icarus/source/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1598544597061},{"_id":"themes/icarus/source/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1598544597062},{"_id":"themes/icarus/source/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1598544597062},{"_id":"themes/icarus/source/js/.eslintrc.json","hash":"45c9014e02fbc516e257484487b4e29ddb5743e1","modified":1598544597063},{"_id":"themes/icarus/source/js/back_to_top.js","hash":"6be1b206481d231ca93ff9b1ccb08c548618cfdf","modified":1598544597064},{"_id":"themes/icarus/source/js/animation.js","hash":"5bb98c8b7e6fdde902f61e40ddfb2a3fbdeb13bf","modified":1598544597063},{"_id":"themes/icarus/source/js/main.js","hash":"34acf13d49dcca1d5e2393c4bfa459bcde40892a","modified":1598544597065},{"_id":"themes/icarus/include/schema/comment/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597020},{"_id":"themes/icarus/include/schema/donate/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597027},{"_id":"themes/icarus/include/schema/misc/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597028},{"_id":"themes/icarus/include/schema/search/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597029},{"_id":"themes/icarus/include/schema/share/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1598544597031},{"_id":"themes/icarus/include/schema/common/article.json","hash":"e79bb7b210946d22bd3a9c710171c548de49a050","modified":1598544597022},{"_id":"themes/icarus/include/schema/common/comment.json","hash":"394665355c58e711ff9a739d1de047bb44588e72","modified":1598544597022},{"_id":"themes/icarus/include/schema/common/donates.json","hash":"8e2c3c2a89c47df841440598ab4e13504e7e37dc","modified":1598544597022},{"_id":"themes/icarus/include/schema/common/head.json","hash":"cf95b825bfca5f1c03d066a4067bd42a7467a423","modified":1598544597023},{"_id":"themes/icarus/include/schema/common/footer.json","hash":"b6036e21a11a5ed0455010ee668e43f165e55254","modified":1598544597023},{"_id":"themes/icarus/include/schema/common/navbar.json","hash":"52a7ae23ebcfb06e8c219be4da1506b824e17715","modified":1598544597024},{"_id":"themes/icarus/include/schema/common/plugins.json","hash":"1b4de5817363ad969b444477cda28eb677a2c0f7","modified":1598544597024},{"_id":"themes/icarus/include/schema/common/providers.json","hash":"5453827e1c267c67102bc983c8d2313865aa64fd","modified":1598544597024},{"_id":"themes/icarus/include/schema/common/search.json","hash":"dd34241b3776bc9aed8ef815c67f2fa622d0984b","modified":1598544597025},{"_id":"themes/icarus/include/schema/common/share.json","hash":"da98300e9197fbc717082419652d54636fd118b9","modified":1598544597025},{"_id":"themes/icarus/include/schema/common/sidebar.json","hash":"5687b24e32bcff12ff7660ff5dc26d74f466a994","modified":1598544597025},{"_id":"themes/icarus/include/schema/common/widgets.json","hash":"43a9c4fccaf75418038537e2e49f2457727a21e7","modified":1598544597026},{"_id":"themes/icarus/include/schema/plugin/animejs.json","hash":"0b5c4a315c0d25f2b296eb44ed14a1d59ccb8613","modified":1598544597029},{"_id":"themes/icarus/include/schema/plugin/back_to_top.json","hash":"c8e0e97a61c3a02c9736f303c206dd406de95d9a","modified":1598544597029},{"_id":"themes/icarus/include/schema/widget/profile.json","hash":"994aff115d59827ad6f98d03adf55b1cf1245378","modified":1598544597031},{"_id":"public/js/algolia.js","hash":"cbfc4355b23d84d2f0dc622e069b3f06c0d10f70","modified":1598585256098},{"_id":"public/js/google_cse.js","hash":"55e7250f4a12bf15220ba5d1d49c91fda5fbd3b4","modified":1598585256098},{"_id":"public/js/insight.js","hash":"78b74ae77f1e854089ccabd871d581dc391fcc29","modified":1598585256098},{"_id":"public/content.json","hash":"fd4dcf414d7fd78dc40fe00f563d6cdc975b5972","modified":1598585256098},{"_id":"public/archives/2020/index.html","hash":"cf48e8540a1207527652cb52e70ffbd27141cb58","modified":1598585256098},{"_id":"public/archives/2020/06/index.html","hash":"23543d0e38285a1e8a8e0667cb3c572818a65f6f","modified":1598585256098},{"_id":"public/archives/2020/08/index.html","hash":"052b2f20ed439238ec25a2952dec577e41b80eb1","modified":1598585256098},{"_id":"public/tags/RabbitMQ/index.html","hash":"292309699d1ead33c3288c682bd64617ec420364","modified":1598585256098},{"_id":"public/2020/08/10/Spring拓展点：BeanFactoryPostProcessor接口及其子接口/index.html","hash":"4db23f457ba83c5defdee87906032221426ceece","modified":1598585256098},{"_id":"public/2020/06/10/RabbitMQ-学习笔记-5种消息模式相关概念/index.html","hash":"4149cd78f06f2e66423a9998884b0d8087cefa4a","modified":1598585256098},{"_id":"public/2019/09/06/spring-boot-学习笔记（一）/index.html","hash":"2109d4e169cc77514c0bd20c2d88147b1a3ed9a9","modified":1598585256098},{"_id":"public/2019/09/03/MobaXterm 远程连接虚拟机很慢/index.html","hash":"1de1422456abad2bb8f662c1c10ec34bcd0139d6","modified":1598585256098},{"_id":"public/2019/09/03/Windows 10 家庭版升级企业版/index.html","hash":"dd4ade8a5b6754c52570d0ab019f1fea701fd53d","modified":1598585256098},{"_id":"public/2019/09/03/使用 shell 脚本启动关闭 spring boot 项目/index.html","hash":"7890b2136219e415bce9e8b794cbc17c40664280","modified":1598585256098},{"_id":"public/2019/09/03/使用 bat 脚本启动关闭 spring boot 项目/index.html","hash":"7f7d2e53958c969c0e5e301f9add94b0f635b27b","modified":1598585256098},{"_id":"public/archives/index.html","hash":"e34d4aa663673b9edec24a46f32ff74324856b00","modified":1598585256098},{"_id":"public/archives/2019/index.html","hash":"3372ccd8d125d451a0c11dabf7001f5b282ad178","modified":1598585256098},{"_id":"public/archives/2019/09/index.html","hash":"b0bc0ec13d881eb88bf45442de36c419ac194e72","modified":1598585256098},{"_id":"public/index.html","hash":"8fd33ec646916aca380f8ef69f3a35fad6de28c5","modified":1598585256098},{"_id":"public/categories/后端/index.html","hash":"96f573e2ab4a80ef8f579bcb49738924a3369f6a","modified":1598585256098},{"_id":"public/tags/Spring/index.html","hash":"81487c6fa9ae5d030abae44ef4ea55b9246732f6","modified":1598585256098},{"_id":"public/categories/index.html","hash":"08df05f940c08b516093ae9091ad1207d5c24303","modified":1598585256098},{"_id":"public/tags/index.html","hash":"cec0ac835867561cb5a3460ab5f110dd55a96a88","modified":1598585256098},{"_id":"public/tags/后端/index.html","hash":"2d0e1750b288be85afaedfe226fe001f640a6244","modified":1598585256098},{"_id":"public/CNAME","hash":"7ea99d63fa30a4e29266b984ffc76fbff7df8143","modified":1598585256098},{"_id":"public/img/favicon.svg","hash":"50322629b1947588ff7a6e59fb07cb1b5bfb9f8c","modified":1598585256098},{"_id":"public/img/avatar.png","hash":"0d8236dcca871735500e9d06bbdbe0853ed6775b","modified":1598585256098},{"_id":"public/img/logo.svg","hash":"f4a9aa50f9a732981ae79e3711a997fc7325a7db","modified":1598585256098},{"_id":"public/img/thumbnail.svg","hash":"38801ce6b2f60c660e1b8868da902c9ab553c82f","modified":1598585256098},{"_id":"public/img/razor-top-black.svg","hash":"201f1171a43ce667a39091fe47c0f278857f18f0","modified":1598585256098},{"_id":"public/img/razor-bottom-black.svg","hash":"a3eda07b1c605b456da9cdf335a1075db5e5d72c","modified":1598585256098},{"_id":"public/img/og_image.png","hash":"b03f163096ca9c350ec962feee9836277b5c2509","modified":1598585256098},{"_id":"public/js/back_to_top.js","hash":"0f071e2331e39043529041322c4812bb13a3990d","modified":1598585256098},{"_id":"public/js/animation.js","hash":"59a05568fd5718513792b0d48bcb4bcf7eaa20e8","modified":1598585256098},{"_id":"public/js/main.js","hash":"3fb6be34945798cd400825e021c4267856fff2df","modified":1598585256098},{"_id":"public/css/style.css","hash":"c4018cbab3b1fbe7fffa232abc5c0e770fe0d28f","modified":1598585256098},{"_id":"public/css/default.css","hash":"c4018cbab3b1fbe7fffa232abc5c0e770fe0d28f","modified":1598585256098},{"_id":"public/css/cyberpunk.css","hash":"22537684e6b69fcb9a46d085fedcb4ab38c9f0b6","modified":1598585256098}],"Category":[{"name":"后端","_id":"cked09tzl0003gwvx45ghhb34"}],"Data":[],"Page":[],"Post":[{"title":"MobaXterm 远程连接虚拟机很慢","date":"2019-09-03T07:43:21.000Z","_content":"\n原因： **<font color=\"red\">ssh的服务端在连接时会自动检测dns环境是否一致导致的。</font>**\n\n解决方法：\n\n修改ssh服务配置文件\n\n```\nvi /etc/ssh/sshd_config\n```\n\n查找UseDNS关键字\n\n```\n/UseDNS\n```\n\n将 UseDNS yes 改成 UseDNS no（注意要将UseDNS前面的#号去掉，不然没用）\n\n保存退出后重启 ssh 服务\n\n```\nsystemctl restart sshd\n```\n","source":"_posts/MobaXterm 远程连接虚拟机很慢.md","raw":"---\ntitle: MobaXterm 远程连接虚拟机很慢\ndate: 2019-09-03 15:43:21\ntags:\n---\n\n原因： **<font color=\"red\">ssh的服务端在连接时会自动检测dns环境是否一致导致的。</font>**\n\n解决方法：\n\n修改ssh服务配置文件\n\n```\nvi /etc/ssh/sshd_config\n```\n\n查找UseDNS关键字\n\n```\n/UseDNS\n```\n\n将 UseDNS yes 改成 UseDNS no（注意要将UseDNS前面的#号去掉，不然没用）\n\n保存退出后重启 ssh 服务\n\n```\nsystemctl restart sshd\n```\n","slug":"MobaXterm 远程连接虚拟机很慢","published":1,"updated":"2019-09-03T07:44:11.566Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tz80000gwvxchfn0vxa","content":"<p>原因： <strong><font color=\"red\">ssh的服务端在连接时会自动检测dns环境是否一致导致的。</font></strong></p>\n<p>解决方法：</p>\n<p>修改ssh服务配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure>\n\n<p>查找UseDNS关键字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;UseDNS</span><br></pre></td></tr></table></figure>\n\n<p>将 UseDNS yes 改成 UseDNS no（注意要将UseDNS前面的#号去掉，不然没用）</p>\n<p>保存退出后重启 ssh 服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<p>原因： <strong><font color=\"red\">ssh的服务端在连接时会自动检测dns环境是否一致导致的。</font></strong></p>\n<p>解决方法：</p>\n<p>修改ssh服务配置文件</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vi &#x2F;etc&#x2F;ssh&#x2F;sshd_config</span><br></pre></td></tr></table></figure>\n\n<p>查找UseDNS关键字</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;UseDNS</span><br></pre></td></tr></table></figure>\n\n<p>将 UseDNS yes 改成 UseDNS no（注意要将UseDNS前面的#号去掉，不然没用）</p>\n<p>保存退出后重启 ssh 服务</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart sshd</span><br></pre></td></tr></table></figure>\n"},{"title":"RabbitMQ 学习笔记-5种消息模式相关概念","date":"2020-06-10T08:23:55.000Z","_content":"\n<p>\n    这里还没有任何东西\n</p>","source":"_posts/RabbitMQ-学习笔记-5种消息模式相关概念.md","raw":"---\ntitle: RabbitMQ 学习笔记-5种消息模式相关概念\ndate: 2020-06-10 16:23:55\ntags:\n- RabbitMQ\n- 后端\ncategories: 后端\n---\n\n<p>\n    这里还没有任何东西\n</p>","slug":"RabbitMQ-学习笔记-5种消息模式相关概念","published":1,"updated":"2020-08-27T14:42:55.487Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzh0001gwvx11xl7szo","content":"<p>\n    这里还没有任何东西\n</p>","site":{"data":{}},"excerpt":"","more":"<p>\n    这里还没有任何东西\n</p>"},{"title":"Spring拓展点：BeanFactoryPostProcessor接口及其子接口","date":"2020-08-10T08:23:55.000Z","_content":"\n### 作用示例：\n\nConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry：动态注册Bean到Spring容器中\n\nConfigurationClassPostProcessor#postProcessBeanFactory：增强修改Bean定义\n\n### 消费者与消费组概念\n\n消费组（包含多个消费者）订阅主题（分区）\n\n<img class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"1156\" data-height=\"854\" src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\">\n\n消费者与消费组这种模型可以让整体的消费能力具备横向伸缩性，我们可以增加（或减少）消费者的个数来提高（或降低）整体的消费能力。","source":"_posts/Spring拓展点：BeanFactoryPostProcessor接口及其子接口.md","raw":"---\ntitle: Spring拓展点：BeanFactoryPostProcessor接口及其子接口\ndate: 2020-08-10 16:23:55\ntags:\n- Spring\n- 后端\ncategories: 后端\n---\n\n### 作用示例：\n\nConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry：动态注册Bean到Spring容器中\n\nConfigurationClassPostProcessor#postProcessBeanFactory：增强修改Bean定义\n\n### 消费者与消费组概念\n\n消费组（包含多个消费者）订阅主题（分区）\n\n<img class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"1156\" data-height=\"854\" src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\">\n\n消费者与消费组这种模型可以让整体的消费能力具备横向伸缩性，我们可以增加（或减少）消费者的个数来提高（或降低）整体的消费能力。","slug":"Spring拓展点：BeanFactoryPostProcessor接口及其子接口","published":1,"updated":"2020-08-27T14:43:37.168Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzj0002gwvx9296dqmy","content":"<h3 id=\"作用示例：\"><a href=\"#作用示例：\" class=\"headerlink\" title=\"作用示例：\"></a>作用示例：</h3><p>ConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry：动态注册Bean到Spring容器中</p>\n<p>ConfigurationClassPostProcessor#postProcessBeanFactory：增强修改Bean定义</p>\n<h3 id=\"消费者与消费组概念\"><a href=\"#消费者与消费组概念\" class=\"headerlink\" title=\"消费者与消费组概念\"></a>消费者与消费组概念</h3><p>消费组（包含多个消费者）订阅主题（分区）</p>\n<img class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"1156\" data-height=\"854\" src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\">\n\n<p>消费者与消费组这种模型可以让整体的消费能力具备横向伸缩性，我们可以增加（或减少）消费者的个数来提高（或降低）整体的消费能力。</p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"作用示例：\"><a href=\"#作用示例：\" class=\"headerlink\" title=\"作用示例：\"></a>作用示例：</h3><p>ConfigurationClassPostProcessor#postProcessBeanDefinitionRegistry：动态注册Bean到Spring容器中</p>\n<p>ConfigurationClassPostProcessor#postProcessBeanFactory：增强修改Bean定义</p>\n<h3 id=\"消费者与消费组概念\"><a href=\"#消费者与消费组概念\" class=\"headerlink\" title=\"消费者与消费组概念\"></a>消费者与消费组概念</h3><p>消费组（包含多个消费者）订阅主题（分区）</p>\n<img class=\"lazyload inited loaded\" data-src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\" data-width=\"1156\" data-height=\"854\" src=\"https://user-gold-cdn.xitu.io/2020/7/3/173127b3faaa0fc0?imageView2/0/w/1280/h/960/format/webp/ignore-error/1\">\n\n<p>消费者与消费组这种模型可以让整体的消费能力具备横向伸缩性，我们可以增加（或减少）消费者的个数来提高（或降低）整体的消费能力。</p>\n"},{"title":"Spring boot 学习笔记（一）","date":"2019-09-06T07:56:21.000Z","_content":"\n<p>\n    这里还没有任何东西\n</p>","source":"_posts/spring-boot-学习笔记（一）.md","raw":"---\ntitle: Spring boot 学习笔记（一）\ndate: 2019-09-06 15:56:21\ntags:\n---\n\n<p>\n    这里还没有任何东西\n</p>","slug":"spring-boot-学习笔记（一）","published":1,"updated":"2020-08-27T14:43:03.383Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzo0005gwvxgn6h0zpn","content":"<p>\n    这里还没有任何东西\n</p>","site":{"data":{}},"excerpt":"","more":"<p>\n    这里还没有任何东西\n</p>"},{"title":"Windows 10 家庭版升级企业版","date":"2019-09-03T07:43:21.000Z","_content":"\n## 一、升级方法\n\n### 1、方法一：直接升级\n\n使用以下密钥直接更改，输入产品密钥后等待系统验证。\n\n```\n    win10家庭版升级专业版密钥：\n        VK7JG-NPHTM-C97JM-9MPGT-3V66T\n        4N7JM-CV98F-WY9XX-9D8CF-369TT （有效）\n        FMPND-XFTD4-67FJC-HDR8C-3YH26\n```\n\n### 2、方法二：使用原版镜像安装专业版 windows 10\n\n> 1、 从 msdn 下载最新的原版镜像 <br/>\n> 2、 将镜像使用 Rufus 刻录到 U 盘上 <br/>\n> 3、 重启后引导从 U 盘启动，系统程序启动\n\n## 二、激活方法\n\n1、 使用管理员权限打开 CMD\n\n2、 输入 slmgr.vbs /upk ，卸载原来的密钥\n\n3、 安装密钥、设置可用的 kms 服务器、激活当前系统\n\n```\n// 安装密钥\nslmgr /ipk TX9XD-98N7V-6WMQ6-BX7FG-H8Q99\n// 设置可用的 kms 服务器\nslmgr /skms zh.us.to\n// 激活当前系统\nslmgr /ato\n```\n\n4、 完成后执行 slmgr.vbs /xpr 查看激活状态\n\n## 三、可用的 key\n\n```\n1、专业版：\n\n    W269N-WFGWX-YVC9B-4J6C9-T83GX\n    MH37W-N47XK-V7XM9-C7227-GCQG9\n    2X7P3-NGJTH-Q9TJF-8XDP9-T83GT\n    J2WWN-Q4338-3GFW9-BWQVK-MG9TT\n    NBQWQ-W9PTV-B4YWP-4K773-T6PKG\n    236TW-X778T-8MV9F-937GT-QVKBB\n    87VT2-FY2XW-F7K39-W3T8R-XMFGF\n    KH2J9-PC326-T44D4-39H6V-TVPBY\n    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK\n    J783Y-JKQWR-677Q8-KCXTF-BHWGC\n    C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y\n    2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG\n    MGX79-TPQB9-KQ248-KXR2V-DHRTD\n    FJHWT-KDGHY-K2384-93CT7-323RC\n\n2、神Key(适用各版本)：\n\n    KH2J9-PC326-T44D4-39H6V-TVPBY\n    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK\n    236TW-X778T-8MV9F-937GT-QVKBB\n    87VT2-FY2XW-F7K39-W3T8R-XMFGF\n    6K2KY-BFH24-PJW6W-9GK29-TMPWP\n    RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289\n\n\n3、常用笔记本激活码：\n\n    戴尔 DELL 序列号： 342DG-6YJR8-X92GV-V7DCV-P4K27\n    联想 LENOVO 序列号： 22TKD-F8XX6-YG69F-9M66D-PMJBM\n    三星 SAMSUNG 序列号：49PB6-6BJ6Y-KHGCQ-7DDY6-TF7CD\n    宏基 ACER 序列号： YKHFT-KW986-GK4PY-FDWYH-7TP9F或    FJGCP-4DFJD-GJY49-VJBQ7-HYRR2\n```\n","source":"_posts/Windows 10 家庭版升级企业版.md","raw":"---\ntitle: Windows 10 家庭版升级企业版\ndate: 2019-09-03 15:43:21\ntags:\n---\n\n## 一、升级方法\n\n### 1、方法一：直接升级\n\n使用以下密钥直接更改，输入产品密钥后等待系统验证。\n\n```\n    win10家庭版升级专业版密钥：\n        VK7JG-NPHTM-C97JM-9MPGT-3V66T\n        4N7JM-CV98F-WY9XX-9D8CF-369TT （有效）\n        FMPND-XFTD4-67FJC-HDR8C-3YH26\n```\n\n### 2、方法二：使用原版镜像安装专业版 windows 10\n\n> 1、 从 msdn 下载最新的原版镜像 <br/>\n> 2、 将镜像使用 Rufus 刻录到 U 盘上 <br/>\n> 3、 重启后引导从 U 盘启动，系统程序启动\n\n## 二、激活方法\n\n1、 使用管理员权限打开 CMD\n\n2、 输入 slmgr.vbs /upk ，卸载原来的密钥\n\n3、 安装密钥、设置可用的 kms 服务器、激活当前系统\n\n```\n// 安装密钥\nslmgr /ipk TX9XD-98N7V-6WMQ6-BX7FG-H8Q99\n// 设置可用的 kms 服务器\nslmgr /skms zh.us.to\n// 激活当前系统\nslmgr /ato\n```\n\n4、 完成后执行 slmgr.vbs /xpr 查看激活状态\n\n## 三、可用的 key\n\n```\n1、专业版：\n\n    W269N-WFGWX-YVC9B-4J6C9-T83GX\n    MH37W-N47XK-V7XM9-C7227-GCQG9\n    2X7P3-NGJTH-Q9TJF-8XDP9-T83GT\n    J2WWN-Q4338-3GFW9-BWQVK-MG9TT\n    NBQWQ-W9PTV-B4YWP-4K773-T6PKG\n    236TW-X778T-8MV9F-937GT-QVKBB\n    87VT2-FY2XW-F7K39-W3T8R-XMFGF\n    KH2J9-PC326-T44D4-39H6V-TVPBY\n    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK\n    J783Y-JKQWR-677Q8-KCXTF-BHWGC\n    C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y\n    2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG\n    MGX79-TPQB9-KQ248-KXR2V-DHRTD\n    FJHWT-KDGHY-K2384-93CT7-323RC\n\n2、神Key(适用各版本)：\n\n    KH2J9-PC326-T44D4-39H6V-TVPBY\n    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK\n    236TW-X778T-8MV9F-937GT-QVKBB\n    87VT2-FY2XW-F7K39-W3T8R-XMFGF\n    6K2KY-BFH24-PJW6W-9GK29-TMPWP\n    RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289\n\n\n3、常用笔记本激活码：\n\n    戴尔 DELL 序列号： 342DG-6YJR8-X92GV-V7DCV-P4K27\n    联想 LENOVO 序列号： 22TKD-F8XX6-YG69F-9M66D-PMJBM\n    三星 SAMSUNG 序列号：49PB6-6BJ6Y-KHGCQ-7DDY6-TF7CD\n    宏基 ACER 序列号： YKHFT-KW986-GK4PY-FDWYH-7TP9F或    FJGCP-4DFJD-GJY49-VJBQ7-HYRR2\n```\n","slug":"Windows 10 家庭版升级企业版","published":1,"updated":"2019-09-03T07:44:21.046Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzp0006gwvx39byesdh","content":"<h2 id=\"一、升级方法\"><a href=\"#一、升级方法\" class=\"headerlink\" title=\"一、升级方法\"></a>一、升级方法</h2><h3 id=\"1、方法一：直接升级\"><a href=\"#1、方法一：直接升级\" class=\"headerlink\" title=\"1、方法一：直接升级\"></a>1、方法一：直接升级</h3><p>使用以下密钥直接更改，输入产品密钥后等待系统验证。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">win10家庭版升级专业版密钥：</span><br><span class=\"line\">    VK7JG-NPHTM-C97JM-9MPGT-3V66T</span><br><span class=\"line\">    4N7JM-CV98F-WY9XX-9D8CF-369TT （有效）</span><br><span class=\"line\">    FMPND-XFTD4-67FJC-HDR8C-3YH26</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、方法二：使用原版镜像安装专业版-windows-10\"><a href=\"#2、方法二：使用原版镜像安装专业版-windows-10\" class=\"headerlink\" title=\"2、方法二：使用原版镜像安装专业版 windows 10\"></a>2、方法二：使用原版镜像安装专业版 windows 10</h3><blockquote>\n<p>1、 从 msdn 下载最新的原版镜像 <br/><br>2、 将镜像使用 Rufus 刻录到 U 盘上 <br/><br>3、 重启后引导从 U 盘启动，系统程序启动</p>\n</blockquote>\n<h2 id=\"二、激活方法\"><a href=\"#二、激活方法\" class=\"headerlink\" title=\"二、激活方法\"></a>二、激活方法</h2><p>1、 使用管理员权限打开 CMD</p>\n<p>2、 输入 slmgr.vbs /upk ，卸载原来的密钥</p>\n<p>3、 安装密钥、设置可用的 kms 服务器、激活当前系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 安装密钥</span><br><span class=\"line\">slmgr &#x2F;ipk TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</span><br><span class=\"line\">&#x2F;&#x2F; 设置可用的 kms 服务器</span><br><span class=\"line\">slmgr &#x2F;skms zh.us.to</span><br><span class=\"line\">&#x2F;&#x2F; 激活当前系统</span><br><span class=\"line\">slmgr &#x2F;ato</span><br></pre></td></tr></table></figure>\n\n<p>4、 完成后执行 slmgr.vbs /xpr 查看激活状态</p>\n<h2 id=\"三、可用的-key\"><a href=\"#三、可用的-key\" class=\"headerlink\" title=\"三、可用的 key\"></a>三、可用的 key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、专业版：</span><br><span class=\"line\"></span><br><span class=\"line\">    W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class=\"line\">    MH37W-N47XK-V7XM9-C7227-GCQG9</span><br><span class=\"line\">    2X7P3-NGJTH-Q9TJF-8XDP9-T83GT</span><br><span class=\"line\">    J2WWN-Q4338-3GFW9-BWQVK-MG9TT</span><br><span class=\"line\">    NBQWQ-W9PTV-B4YWP-4K773-T6PKG</span><br><span class=\"line\">    236TW-X778T-8MV9F-937GT-QVKBB</span><br><span class=\"line\">    87VT2-FY2XW-F7K39-W3T8R-XMFGF</span><br><span class=\"line\">    KH2J9-PC326-T44D4-39H6V-TVPBY</span><br><span class=\"line\">    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK</span><br><span class=\"line\">    J783Y-JKQWR-677Q8-KCXTF-BHWGC</span><br><span class=\"line\">    C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y</span><br><span class=\"line\">    2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG</span><br><span class=\"line\">    MGX79-TPQB9-KQ248-KXR2V-DHRTD</span><br><span class=\"line\">    FJHWT-KDGHY-K2384-93CT7-323RC</span><br><span class=\"line\"></span><br><span class=\"line\">2、神Key(适用各版本)：</span><br><span class=\"line\"></span><br><span class=\"line\">    KH2J9-PC326-T44D4-39H6V-TVPBY</span><br><span class=\"line\">    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK</span><br><span class=\"line\">    236TW-X778T-8MV9F-937GT-QVKBB</span><br><span class=\"line\">    87VT2-FY2XW-F7K39-W3T8R-XMFGF</span><br><span class=\"line\">    6K2KY-BFH24-PJW6W-9GK29-TMPWP</span><br><span class=\"line\">    RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3、常用笔记本激活码：</span><br><span class=\"line\"></span><br><span class=\"line\">    戴尔 DELL 序列号： 342DG-6YJR8-X92GV-V7DCV-P4K27</span><br><span class=\"line\">    联想 LENOVO 序列号： 22TKD-F8XX6-YG69F-9M66D-PMJBM</span><br><span class=\"line\">    三星 SAMSUNG 序列号：49PB6-6BJ6Y-KHGCQ-7DDY6-TF7CD</span><br><span class=\"line\">    宏基 ACER 序列号： YKHFT-KW986-GK4PY-FDWYH-7TP9F或    FJGCP-4DFJD-GJY49-VJBQ7-HYRR2</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、升级方法\"><a href=\"#一、升级方法\" class=\"headerlink\" title=\"一、升级方法\"></a>一、升级方法</h2><h3 id=\"1、方法一：直接升级\"><a href=\"#1、方法一：直接升级\" class=\"headerlink\" title=\"1、方法一：直接升级\"></a>1、方法一：直接升级</h3><p>使用以下密钥直接更改，输入产品密钥后等待系统验证。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">win10家庭版升级专业版密钥：</span><br><span class=\"line\">    VK7JG-NPHTM-C97JM-9MPGT-3V66T</span><br><span class=\"line\">    4N7JM-CV98F-WY9XX-9D8CF-369TT （有效）</span><br><span class=\"line\">    FMPND-XFTD4-67FJC-HDR8C-3YH26</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"2、方法二：使用原版镜像安装专业版-windows-10\"><a href=\"#2、方法二：使用原版镜像安装专业版-windows-10\" class=\"headerlink\" title=\"2、方法二：使用原版镜像安装专业版 windows 10\"></a>2、方法二：使用原版镜像安装专业版 windows 10</h3><blockquote>\n<p>1、 从 msdn 下载最新的原版镜像 <br/><br>2、 将镜像使用 Rufus 刻录到 U 盘上 <br/><br>3、 重启后引导从 U 盘启动，系统程序启动</p>\n</blockquote>\n<h2 id=\"二、激活方法\"><a href=\"#二、激活方法\" class=\"headerlink\" title=\"二、激活方法\"></a>二、激活方法</h2><p>1、 使用管理员权限打开 CMD</p>\n<p>2、 输入 slmgr.vbs /upk ，卸载原来的密钥</p>\n<p>3、 安装密钥、设置可用的 kms 服务器、激活当前系统</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&#x2F;&#x2F; 安装密钥</span><br><span class=\"line\">slmgr &#x2F;ipk TX9XD-98N7V-6WMQ6-BX7FG-H8Q99</span><br><span class=\"line\">&#x2F;&#x2F; 设置可用的 kms 服务器</span><br><span class=\"line\">slmgr &#x2F;skms zh.us.to</span><br><span class=\"line\">&#x2F;&#x2F; 激活当前系统</span><br><span class=\"line\">slmgr &#x2F;ato</span><br></pre></td></tr></table></figure>\n\n<p>4、 完成后执行 slmgr.vbs /xpr 查看激活状态</p>\n<h2 id=\"三、可用的-key\"><a href=\"#三、可用的-key\" class=\"headerlink\" title=\"三、可用的 key\"></a>三、可用的 key</h2><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">1、专业版：</span><br><span class=\"line\"></span><br><span class=\"line\">    W269N-WFGWX-YVC9B-4J6C9-T83GX</span><br><span class=\"line\">    MH37W-N47XK-V7XM9-C7227-GCQG9</span><br><span class=\"line\">    2X7P3-NGJTH-Q9TJF-8XDP9-T83GT</span><br><span class=\"line\">    J2WWN-Q4338-3GFW9-BWQVK-MG9TT</span><br><span class=\"line\">    NBQWQ-W9PTV-B4YWP-4K773-T6PKG</span><br><span class=\"line\">    236TW-X778T-8MV9F-937GT-QVKBB</span><br><span class=\"line\">    87VT2-FY2XW-F7K39-W3T8R-XMFGF</span><br><span class=\"line\">    KH2J9-PC326-T44D4-39H6V-TVPBY</span><br><span class=\"line\">    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK</span><br><span class=\"line\">    J783Y-JKQWR-677Q8-KCXTF-BHWGC</span><br><span class=\"line\">    C4M9W-WPRDG-QBB3F-VM9K8-KDQ9Y</span><br><span class=\"line\">    2VCGQ-BRVJ4-2HGJ2-K36X9-J66JG</span><br><span class=\"line\">    MGX79-TPQB9-KQ248-KXR2V-DHRTD</span><br><span class=\"line\">    FJHWT-KDGHY-K2384-93CT7-323RC</span><br><span class=\"line\"></span><br><span class=\"line\">2、神Key(适用各版本)：</span><br><span class=\"line\"></span><br><span class=\"line\">    KH2J9-PC326-T44D4-39H6V-TVPBY</span><br><span class=\"line\">    TFP9Y-VCY3P-VVH3T-8XXCC-MF4YK</span><br><span class=\"line\">    236TW-X778T-8MV9F-937GT-QVKBB</span><br><span class=\"line\">    87VT2-FY2XW-F7K39-W3T8R-XMFGF</span><br><span class=\"line\">    6K2KY-BFH24-PJW6W-9GK29-TMPWP</span><br><span class=\"line\">    RHTBY-VWY6D-QJRJ9-JGQ3X-Q2289</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">3、常用笔记本激活码：</span><br><span class=\"line\"></span><br><span class=\"line\">    戴尔 DELL 序列号： 342DG-6YJR8-X92GV-V7DCV-P4K27</span><br><span class=\"line\">    联想 LENOVO 序列号： 22TKD-F8XX6-YG69F-9M66D-PMJBM</span><br><span class=\"line\">    三星 SAMSUNG 序列号：49PB6-6BJ6Y-KHGCQ-7DDY6-TF7CD</span><br><span class=\"line\">    宏基 ACER 序列号： YKHFT-KW986-GK4PY-FDWYH-7TP9F或    FJGCP-4DFJD-GJY49-VJBQ7-HYRR2</span><br></pre></td></tr></table></figure>\n"},{"title":"使用 shell 脚本启动|关闭 spring boot 项目","date":"2019-09-03T07:43:21.000Z","_content":"\n## 启动脚本\n\n使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则提示应用已经运行，否则就启动应用。\n\n``nohup`` 命令与  ``&`` 组合使用能使命令在后台挂起运行。\n\n``> ./run.log 2>&1``  将日志输出到指定的文件。\n\n```sh\n#!/bin/bash\n#应用名\nAPP_NAME=srm-interface-front.jar\n\n#检查程序是否在运行\nis_exist(){\n  pid=`ps -ef|grep $APP_NAME|grep -v grep|awk '{print $2}' `\n  #如果不存在返回1，存在返回0\n  if [ -z \"${pid}\" ]; then\n   return 1\n  else\n    return 0\n  fi\n}\n\n#启动\nis_exist\nif [ $? -eq \"0\" ]; then\n  echo \"${APP_NAME} is already running. pid=${pid} .\"\nelse\n  nohup java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar $APP_NAME > ./run.log 2>&1 &\nfi\n```\n\n## 关闭脚本\n\n使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则杀掉进程，否则提示应用未运行。\n\n``kill -9`` 命令是强杀应用，不会走释放资源的步骤。不建议使用，但是在无法关闭进程时，可以使用。此处为了避免进程杀不掉，采用了 ``kill -9`` 。\n\n\n```sh\n#!/bin/bash\n#应用名\nAPP_NAME=srm-interface-front.jar\n\n#检查程序是否在运行\nis_exist(){\n  pid=`ps -ef|grep $APP_NAME|grep -v grep|awk '{print $2}' `\n  #如果不存在返回1，存在返回0\n  if [ -z \"${pid}\" ]; then\n   return 1\n  else\n    return 0\n  fi\n}\n\n#停止\nis_exist\nif [ $? -eq \"0\" ]; then\n  kill -9 $pid\nelse\n  echo \"${APP_NAME} is not running\"\nfi\n```\n","source":"_posts/使用 shell 脚本启动关闭 spring boot 项目.md","raw":"---\ntitle: 使用 shell 脚本启动|关闭 spring boot 项目\ndate: 2019-09-03 15:43:21\ntags:\n---\n\n## 启动脚本\n\n使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则提示应用已经运行，否则就启动应用。\n\n``nohup`` 命令与  ``&`` 组合使用能使命令在后台挂起运行。\n\n``> ./run.log 2>&1``  将日志输出到指定的文件。\n\n```sh\n#!/bin/bash\n#应用名\nAPP_NAME=srm-interface-front.jar\n\n#检查程序是否在运行\nis_exist(){\n  pid=`ps -ef|grep $APP_NAME|grep -v grep|awk '{print $2}' `\n  #如果不存在返回1，存在返回0\n  if [ -z \"${pid}\" ]; then\n   return 1\n  else\n    return 0\n  fi\n}\n\n#启动\nis_exist\nif [ $? -eq \"0\" ]; then\n  echo \"${APP_NAME} is already running. pid=${pid} .\"\nelse\n  nohup java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar $APP_NAME > ./run.log 2>&1 &\nfi\n```\n\n## 关闭脚本\n\n使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则杀掉进程，否则提示应用未运行。\n\n``kill -9`` 命令是强杀应用，不会走释放资源的步骤。不建议使用，但是在无法关闭进程时，可以使用。此处为了避免进程杀不掉，采用了 ``kill -9`` 。\n\n\n```sh\n#!/bin/bash\n#应用名\nAPP_NAME=srm-interface-front.jar\n\n#检查程序是否在运行\nis_exist(){\n  pid=`ps -ef|grep $APP_NAME|grep -v grep|awk '{print $2}' `\n  #如果不存在返回1，存在返回0\n  if [ -z \"${pid}\" ]; then\n   return 1\n  else\n    return 0\n  fi\n}\n\n#停止\nis_exist\nif [ $? -eq \"0\" ]; then\n  kill -9 $pid\nelse\n  echo \"${APP_NAME} is not running\"\nfi\n```\n","slug":"使用 shell 脚本启动关闭 spring boot 项目","published":1,"updated":"2020-07-04T06:31:24.648Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzq0007gwvxabv4hnia","content":"<h2 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h2><p>使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则提示应用已经运行，否则就启动应用。</p>\n<p><code>nohup</code> 命令与  <code>&amp;</code> 组合使用能使命令在后台挂起运行。</p>\n<p><code>&gt; ./run.log 2&gt;&amp;1</code>  将日志输出到指定的文件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#应用名</span></span><br><span class=\"line\">APP_NAME=srm-interface-front.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检查程序是否在运行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">is_exist</span></span>()&#123;</span><br><span class=\"line\">  pid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|awk <span class=\"string\">'&#123;print $2&#125;'</span> `</span><br><span class=\"line\">  <span class=\"comment\">#如果不存在返回1，存在返回0</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;pid&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#启动</span></span><br><span class=\"line\">is_exist</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq <span class=\"string\">\"0\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;APP_NAME&#125;</span> is already running. pid=<span class=\"variable\">$&#123;pid&#125;</span> .\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  nohup java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar <span class=\"variable\">$APP_NAME</span> &gt; ./run.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭脚本\"><a href=\"#关闭脚本\" class=\"headerlink\" title=\"关闭脚本\"></a>关闭脚本</h2><p>使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则杀掉进程，否则提示应用未运行。</p>\n<p><code>kill -9</code> 命令是强杀应用，不会走释放资源的步骤。不建议使用，但是在无法关闭进程时，可以使用。此处为了避免进程杀不掉，采用了 <code>kill -9</code> 。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#应用名</span></span><br><span class=\"line\">APP_NAME=srm-interface-front.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检查程序是否在运行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">is_exist</span></span>()&#123;</span><br><span class=\"line\">  pid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|awk <span class=\"string\">'&#123;print $2&#125;'</span> `</span><br><span class=\"line\">  <span class=\"comment\">#如果不存在返回1，存在返回0</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;pid&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#停止</span></span><br><span class=\"line\">is_exist</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq <span class=\"string\">\"0\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$pid</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;APP_NAME&#125;</span> is not running\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h2><p>使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则提示应用已经运行，否则就启动应用。</p>\n<p><code>nohup</code> 命令与  <code>&amp;</code> 组合使用能使命令在后台挂起运行。</p>\n<p><code>&gt; ./run.log 2&gt;&amp;1</code>  将日志输出到指定的文件。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#应用名</span></span><br><span class=\"line\">APP_NAME=srm-interface-front.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检查程序是否在运行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">is_exist</span></span>()&#123;</span><br><span class=\"line\">  pid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|awk <span class=\"string\">'&#123;print $2&#125;'</span> `</span><br><span class=\"line\">  <span class=\"comment\">#如果不存在返回1，存在返回0</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;pid&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#启动</span></span><br><span class=\"line\">is_exist</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq <span class=\"string\">\"0\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;APP_NAME&#125;</span> is already running. pid=<span class=\"variable\">$&#123;pid&#125;</span> .\"</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  nohup java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar <span class=\"variable\">$APP_NAME</span> &gt; ./run.log 2&gt;&amp;1 &amp;</span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭脚本\"><a href=\"#关闭脚本\" class=\"headerlink\" title=\"关闭脚本\"></a>关闭脚本</h2><p>使用 ps 命令显示瞬间行程 (process) 的动态，grep 来获取应用的进程信息，最后获取到应用的 pid。获取到 pid 的同时还检测了应用是否存在运行进程，存在则杀掉进程，否则提示应用未运行。</p>\n<p><code>kill -9</code> 命令是强杀应用，不会走释放资源的步骤。不建议使用，但是在无法关闭进程时，可以使用。此处为了避免进程杀不掉，采用了 <code>kill -9</code> 。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#!/bin/bash</span></span><br><span class=\"line\"><span class=\"comment\">#应用名</span></span><br><span class=\"line\">APP_NAME=srm-interface-front.jar</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#检查程序是否在运行</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">is_exist</span></span>()&#123;</span><br><span class=\"line\">  pid=`ps -ef|grep <span class=\"variable\">$APP_NAME</span>|grep -v grep|awk <span class=\"string\">'&#123;print $2&#125;'</span> `</span><br><span class=\"line\">  <span class=\"comment\">#如果不存在返回1，存在返回0</span></span><br><span class=\"line\">  <span class=\"keyword\">if</span> [ -z <span class=\"string\">\"<span class=\"variable\">$&#123;pid&#125;</span>\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">   <span class=\"built_in\">return</span> 1</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">    <span class=\"built_in\">return</span> 0</span><br><span class=\"line\">  <span class=\"keyword\">fi</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#停止</span></span><br><span class=\"line\">is_exist</span><br><span class=\"line\"><span class=\"keyword\">if</span> [ $? -eq <span class=\"string\">\"0\"</span> ]; <span class=\"keyword\">then</span></span><br><span class=\"line\">  <span class=\"built_in\">kill</span> -9 <span class=\"variable\">$pid</span></span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">  <span class=\"built_in\">echo</span> <span class=\"string\">\"<span class=\"variable\">$&#123;APP_NAME&#125;</span> is not running\"</span></span><br><span class=\"line\"><span class=\"keyword\">fi</span></span><br></pre></td></tr></table></figure>\n"},{"title":"使用 bat 脚本启动|关闭 spring boot 项目","date":"2019-09-03T07:43:21.000Z","_content":"\n## 启动脚本\n\nspring boot 项目打包出来的 jar 包要和 bat 脚本文件在同一目录下，启动前会检测端口是否被占用。端口被占用将提示占用端口的进程 PID，可以使用关闭脚本关闭或手动关闭。\n\n```bat\n@echo off\nrem 应用名\nset APP_NAME=hzero-generator\nset port=8090\nfor /f \"tokens=1-5\" %%a in ('netstat -ano ^| find \":%port%\"') do (\n    if \"%%e\" == \"\" (\n        set pid=%%d\n    ) else (\n        set pid=%%e\n    )\n)\nif NOT \"%pid%\" == \"\" (\n   echo \"port %port% is already occupied by PID %pid%!\"\n   pause\n) else (\n    rem 项目启动命令（后台运行）\n    start java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar .\\%APP_NAME%.jar\n)\n```\n\n## 关闭脚本\n\n关闭脚本通过检测占用应用端口的进程 PID，然后杀掉该进程及相关的进程来实现关闭应用。端口未被占用将提示该端口未被占用，不会做任何操作。\n\n```bat\n@echo off\nSETLOCAL ENABLEDELAYEDEXPANSION\nrem 停止指定端口的命令脚本 端口号\nset port=8090\nfor /f \"tokens=1-5\" %%a in ('netstat -ano ^| find \":%port%\"') do (\n    if NOT \"%%e\" == \"0\" (\n        set pid= %%e\n        taskkill /f /pid !pid!\n    )\n)\n\nif \"%pid%\" == \"\" (\n  echo \"port %port% is not running anything!\"\n  pause\n)\n```\n","source":"_posts/使用 bat 脚本启动关闭 spring boot 项目.md","raw":"---\ntitle: 使用 bat 脚本启动|关闭 spring boot 项目\ndate: 2019-09-03 15:43:21\ntags:\n---\n\n## 启动脚本\n\nspring boot 项目打包出来的 jar 包要和 bat 脚本文件在同一目录下，启动前会检测端口是否被占用。端口被占用将提示占用端口的进程 PID，可以使用关闭脚本关闭或手动关闭。\n\n```bat\n@echo off\nrem 应用名\nset APP_NAME=hzero-generator\nset port=8090\nfor /f \"tokens=1-5\" %%a in ('netstat -ano ^| find \":%port%\"') do (\n    if \"%%e\" == \"\" (\n        set pid=%%d\n    ) else (\n        set pid=%%e\n    )\n)\nif NOT \"%pid%\" == \"\" (\n   echo \"port %port% is already occupied by PID %pid%!\"\n   pause\n) else (\n    rem 项目启动命令（后台运行）\n    start java -Xms256m -Xmx512m -Dfile.encoding=utf-8 -jar .\\%APP_NAME%.jar\n)\n```\n\n## 关闭脚本\n\n关闭脚本通过检测占用应用端口的进程 PID，然后杀掉该进程及相关的进程来实现关闭应用。端口未被占用将提示该端口未被占用，不会做任何操作。\n\n```bat\n@echo off\nSETLOCAL ENABLEDELAYEDEXPANSION\nrem 停止指定端口的命令脚本 端口号\nset port=8090\nfor /f \"tokens=1-5\" %%a in ('netstat -ano ^| find \":%port%\"') do (\n    if NOT \"%%e\" == \"0\" (\n        set pid= %%e\n        taskkill /f /pid !pid!\n    )\n)\n\nif \"%pid%\" == \"\" (\n  echo \"port %port% is not running anything!\"\n  pause\n)\n```\n","slug":"使用 bat 脚本启动关闭 spring boot 项目","published":1,"updated":"2019-09-03T07:44:25.303Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cked09tzw000agwvx7x0p4dc0","content":"<h2 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h2><p>spring boot 项目打包出来的 jar 包要和 bat 脚本文件在同一目录下，启动前会检测端口是否被占用。端口被占用将提示占用端口的进程 PID，可以使用关闭脚本关闭或手动关闭。</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"comment\">rem 应用名</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> APP_NAME=hzero-generator</span><br><span class=\"line\"><span class=\"built_in\">set</span> port=<span class=\"number\">8090</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">1</span>-<span class=\"number\">5</span>\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('netstat -ano ^| <span class=\"built_in\">find</span> \":<span class=\"variable\">%port%</span>\"') <span class=\"keyword\">do</span> (</span><br><span class=\"line\">    <span class=\"keyword\">if</span> \"<span class=\"variable\">%%e</span>\" == \"\" (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid=<span class=\"variable\">%%d</span></span><br><span class=\"line\">    ) <span class=\"keyword\">else</span> (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid=<span class=\"variable\">%%e</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">NOT</span> \"<span class=\"variable\">%pid%</span>\" == \"\" (</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> \"port <span class=\"variable\">%port%</span> is already occupied by PID <span class=\"variable\">%pid%</span>!\"</span><br><span class=\"line\">   <span class=\"built_in\">pause</span></span><br><span class=\"line\">) <span class=\"keyword\">else</span> (</span><br><span class=\"line\"><span class=\"comment\">    rem 项目启动命令（后台运行）</span></span><br><span class=\"line\">    <span class=\"built_in\">start</span> java -Xms256m -Xmx512m -Dfile.encoding=utf-<span class=\"number\">8</span> -jar .\\<span class=\"variable\">%APP_NAME%</span>.jar</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭脚本\"><a href=\"#关闭脚本\" class=\"headerlink\" title=\"关闭脚本\"></a>关闭脚本</h2><p>关闭脚本通过检测占用应用端口的进程 PID，然后杀掉该进程及相关的进程来实现关闭应用。端口未被占用将提示该端口未被占用，不会做任何操作。</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">SETLOCAL</span> ENABLEDELAYEDEXPANSION</span><br><span class=\"line\"><span class=\"comment\">rem 停止指定端口的命令脚本 端口号</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> port=<span class=\"number\">8090</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">1</span>-<span class=\"number\">5</span>\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('netstat -ano ^| <span class=\"built_in\">find</span> \":<span class=\"variable\">%port%</span>\"') <span class=\"keyword\">do</span> (</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">NOT</span> \"<span class=\"variable\">%%e</span>\" == \"<span class=\"number\">0</span>\" (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid= <span class=\"variable\">%%e</span></span><br><span class=\"line\">        <span class=\"built_in\">taskkill</span> /f /pid <span class=\"variable\">!pid!</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> \"<span class=\"variable\">%pid%</span>\" == \"\" (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> \"port <span class=\"variable\">%port%</span> is <span class=\"keyword\">not</span> running anything!\"</span><br><span class=\"line\">  <span class=\"built_in\">pause</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"启动脚本\"><a href=\"#启动脚本\" class=\"headerlink\" title=\"启动脚本\"></a>启动脚本</h2><p>spring boot 项目打包出来的 jar 包要和 bat 脚本文件在同一目录下，启动前会检测端口是否被占用。端口被占用将提示占用端口的进程 PID，可以使用关闭脚本关闭或手动关闭。</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"comment\">rem 应用名</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> APP_NAME=hzero-generator</span><br><span class=\"line\"><span class=\"built_in\">set</span> port=<span class=\"number\">8090</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">1</span>-<span class=\"number\">5</span>\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('netstat -ano ^| <span class=\"built_in\">find</span> \":<span class=\"variable\">%port%</span>\"') <span class=\"keyword\">do</span> (</span><br><span class=\"line\">    <span class=\"keyword\">if</span> \"<span class=\"variable\">%%e</span>\" == \"\" (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid=<span class=\"variable\">%%d</span></span><br><span class=\"line\">    ) <span class=\"keyword\">else</span> (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid=<span class=\"variable\">%%e</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"><span class=\"keyword\">if</span> <span class=\"keyword\">NOT</span> \"<span class=\"variable\">%pid%</span>\" == \"\" (</span><br><span class=\"line\">   <span class=\"built_in\">echo</span> \"port <span class=\"variable\">%port%</span> is already occupied by PID <span class=\"variable\">%pid%</span>!\"</span><br><span class=\"line\">   <span class=\"built_in\">pause</span></span><br><span class=\"line\">) <span class=\"keyword\">else</span> (</span><br><span class=\"line\"><span class=\"comment\">    rem 项目启动命令（后台运行）</span></span><br><span class=\"line\">    <span class=\"built_in\">start</span> java -Xms256m -Xmx512m -Dfile.encoding=utf-<span class=\"number\">8</span> -jar .\\<span class=\"variable\">%APP_NAME%</span>.jar</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"关闭脚本\"><a href=\"#关闭脚本\" class=\"headerlink\" title=\"关闭脚本\"></a>关闭脚本</h2><p>关闭脚本通过检测占用应用端口的进程 PID，然后杀掉该进程及相关的进程来实现关闭应用。端口未被占用将提示该端口未被占用，不会做任何操作。</p>\n<figure class=\"highlight bat\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@<span class=\"built_in\">echo</span> off</span><br><span class=\"line\"><span class=\"built_in\">SETLOCAL</span> ENABLEDELAYEDEXPANSION</span><br><span class=\"line\"><span class=\"comment\">rem 停止指定端口的命令脚本 端口号</span></span><br><span class=\"line\"><span class=\"built_in\">set</span> port=<span class=\"number\">8090</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> /f \"tokens=<span class=\"number\">1</span>-<span class=\"number\">5</span>\" <span class=\"variable\">%%a</span> <span class=\"keyword\">in</span> ('netstat -ano ^| <span class=\"built_in\">find</span> \":<span class=\"variable\">%port%</span>\"') <span class=\"keyword\">do</span> (</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">NOT</span> \"<span class=\"variable\">%%e</span>\" == \"<span class=\"number\">0</span>\" (</span><br><span class=\"line\">        <span class=\"built_in\">set</span> pid= <span class=\"variable\">%%e</span></span><br><span class=\"line\">        <span class=\"built_in\">taskkill</span> /f /pid <span class=\"variable\">!pid!</span></span><br><span class=\"line\">    )</span><br><span class=\"line\">)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> \"<span class=\"variable\">%pid%</span>\" == \"\" (</span><br><span class=\"line\">  <span class=\"built_in\">echo</span> \"port <span class=\"variable\">%port%</span> is <span class=\"keyword\">not</span> running anything!\"</span><br><span class=\"line\">  <span class=\"built_in\">pause</span></span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cked09tzh0001gwvx11xl7szo","category_id":"cked09tzl0003gwvx45ghhb34","_id":"cked09tzx000bgwvx98bedg53"},{"post_id":"cked09tzj0002gwvx9296dqmy","category_id":"cked09tzl0003gwvx45ghhb34","_id":"cked09tzy000egwvx872gfwc4"}],"PostTag":[{"post_id":"cked09tzh0001gwvx11xl7szo","tag_id":"cked09tzn0004gwvx33yv27nr","_id":"cked09tzy000dgwvxcjwh9tio"},{"post_id":"cked09tzh0001gwvx11xl7szo","tag_id":"cked09tzr0009gwvx3rmxafcz","_id":"cked09tzz000fgwvx0uq4a9d1"},{"post_id":"cked09tzj0002gwvx9296dqmy","tag_id":"cked09tzx000cgwvx47gt5dch","_id":"cked09u00000hgwvxfjr900h1"},{"post_id":"cked09tzj0002gwvx9296dqmy","tag_id":"cked09tzr0009gwvx3rmxafcz","_id":"cked09u01000igwvx27yb13rb"}],"Tag":[{"name":"RabbitMQ","_id":"cked09tzn0004gwvx33yv27nr"},{"name":"后端","_id":"cked09tzr0009gwvx3rmxafcz"},{"name":"Spring","_id":"cked09tzx000cgwvx47gt5dch"}]}}